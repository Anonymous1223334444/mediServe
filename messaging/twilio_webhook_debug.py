# messaging/twilio_webhook_debug.py
# Version de debug du webhook avec r√©ponses simul√©es

from django.http import HttpResponse
from django.views.decorators.csrf import csrf_exempt
from django.views.decorators.http import require_POST
from twilio.twiml.messaging_response import MessagingResponse
from patients.models import Patient
from django.utils import timezone
import logging
import re

logger = logging.getLogger(__name__)

@csrf_exempt
@require_POST
def twilio_webhook_debug(request):
    """Webhook Twilio avec r√©ponses de test pour d√©bugger"""
    try:
        # Extraire les donn√©es
        from_number = request.POST.get('From', '').replace('whatsapp:', '').replace(' ', '')
        message_body = request.POST.get('Body', '').strip()
        
        logger.info(f"üì± Message re√ßu de {from_number}: {message_body}")
        print(f"\nüîî WEBHOOK APPEL√â - De: {from_number} - Message: {message_body}\n")
        
        # Gestion de l'activation avec token
        if message_body.upper().startswith('ACTIVER '):
            token_match = re.search(r'[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}', message_body, re.IGNORECASE)
            
            if token_match:
                token = token_match.group(0)
                logger.info(f"üîë Token extrait: {token}")
                
                try:
                    patient = Patient.objects.get(activation_token=token)
                    patient_phone_clean = patient.phone.replace(' ', '')
                    
                    if patient_phone_clean != from_number:
                        reply = "‚ùå Ce lien d'activation ne correspond pas √† votre num√©ro."
                    elif patient.is_active:
                        reply = f"‚úÖ {patient.first_name}, votre compte est d√©j√† activ√© !"
                    else:
                        patient.is_active = True
                        patient.activated_at = timezone.now()
                        patient.save()
                        reply = f"""‚úÖ Bienvenue {patient.first_name} !

Votre espace sant√© CARE est maintenant actif.

Je suis votre assistant m√©dical. Posez vos questions !"""
                        
                except Patient.DoesNotExist:
                    reply = "‚ùå Token d'activation invalide."
            else:
                reply = "‚ùå Format invalide. Copiez le message complet du SMS."
                
        else:
            # Pour toute autre question
            try:
                patient = Patient.objects.get(phone=from_number)
                
                if not patient.is_active:
                    reply = f"‚ùå Activez d'abord votre compte.\n\nEnvoyez : ACTIVER {patient.activation_token}"
                else:
                    # R√âPONSES DE TEST selon les mots-cl√©s
                    message_lower = message_body.lower()
                    
                    if any(word in message_lower for word in ['document', 'fichier', 'pdf']):
                        # V√©rifier les documents du patient
                        from documents.models import DocumentUpload
                        docs = DocumentUpload.objects.filter(patient=patient, upload_status='indexed')
                        
                        if docs.exists():
                            doc_list = "\n".join([f"üìÑ {doc.original_filename}" for doc in docs[:3]])
                            reply = f"üìö Vos documents index√©s :\n{doc_list}\n\nQue voulez-vous savoir ?"
                        else:
                            reply = "üì≠ Aucun document trouv√©. Contactez votre m√©decin."
                            
                    elif any(word in message_lower for word in ['r√©sultat', 'analyse', 'examen']):
                        reply = "üî¨ D'apr√®s vos documents, vos derniers r√©sultats datent du mois dernier. Tous les param√®tres sont dans les normes."
                        
                    elif any(word in message_lower for word in ['m√©dicament', 'traitement', 'posologie']):
                        reply = "üíä Selon votre dossier, vous prenez actuellement :\n- Parac√©tamol 1g : 3x/jour\n- Vitamine D : 1x/jour"
                        
                    elif any(word in message_lower for word in ['bonjour', 'salut', 'hello']):
                        reply = f"üëã Bonjour {patient.first_name} ! Comment puis-je vous aider aujourd'hui ?"
                        
                    elif any(word in message_lower for word in ['aide', 'help', 'comment']):
                        reply = """ü§ù Je peux vous aider avec :
- Vos documents m√©dicaux
- Vos r√©sultats d'analyses
- Vos m√©dicaments
- Vos rendez-vous

Posez votre question !"""
                        
                    else:
                        # R√©ponse g√©n√©rique avec info de debug
                        reply = f"""ü§ñ J'ai bien re√ßu : "{message_body}"

[MODE DEBUG - RAG d√©sactiv√©]

Pour tester, essayez :
- "Mes documents"
- "Mes r√©sultats"
- "Mes m√©dicaments"

Patient ID: {patient.id}
Docs index√©s: {DocumentUpload.objects.filter(patient=patient, upload_status='indexed').count()}"""
                        
            except Patient.DoesNotExist:
                reply = "‚ùå Num√©ro non reconnu. Contactez votre m√©decin pour vous inscrire."
        
        # Envoyer la r√©ponse
        resp = MessagingResponse()
        resp.message(reply)
        
        logger.info(f"üì§ R√©ponse envoy√©e: {reply[:50]}...")
        return HttpResponse(str(resp), content_type='text/xml')
        
    except Exception as e:
        logger.error(f"‚ùå Erreur webhook: {e}", exc_info=True)
        resp = MessagingResponse()
        resp.message(f"‚ö†Ô∏è Erreur : {str(e)}")
        return HttpResponse(str(resp), content_type='text/xml')


# V√©rifier les tokens de tous les patients
def check_all_tokens():
    """Fonction utilitaire pour voir tous les tokens"""
    from patients.models import Patient
    
    print("\nüìã LISTE DES PATIENTS ET TOKENS :")
    print("-" * 60)
    
    for p in Patient.objects.all():
        status = "‚úÖ ACTIF" if p.is_active else "‚ùå INACTIF"
        print(f"{status} {p.full_name()} ({p.phone})")
        print(f"   Token: {p.activation_token}")
        print(f"   Lien: https://orca-eternal-specially.ngrok-free.app/api/patients/activate/{p.activation_token}/")
        print("-" * 60)


# Dans urls.py, temporairement remplacer par :
# from messaging.twilio_webhook_debug import twilio_webhook_debug
# path('api/webhook/twilio/', twilio_webhook_debug, name='twilio-webhook'),