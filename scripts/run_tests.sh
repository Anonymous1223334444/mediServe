#!/bin/bash
# Script pour ex√©cuter les tests depuis n'importe quel r√©pertoire

# D√©terminer le r√©pertoire du script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Si on est dans le dossier scripts, remonter d'un niveau
if [[ "$(basename "$SCRIPT_DIR")" == "scripts" ]]; then
    PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
else
    PROJECT_ROOT="$SCRIPT_DIR"
fi

echo "üìÅ R√©pertoire du projet: $PROJECT_ROOT"

# Aller dans le r√©pertoire du projet
cd "$PROJECT_ROOT" || exit 1

# Activer l'environnement virtuel si disponible
if [ -f "venv/bin/activate" ]; then
    echo "üîß Activation de l'environnement virtuel..."
    source venv/bin/activate
fi

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "manage.py" ]; then
    echo "‚ùå Erreur: manage.py non trouv√©!"
    echo "   R√©pertoire actuel: $(pwd)"
    exit 1
fi

# D√©finir les variables d'environnement
export DJANGO_SETTINGS_MODULE=mediServe.settings
export PYTHONPATH=$PROJECT_ROOT:$PYTHONPATH

# Ex√©cuter la commande demand√©e
if [ $# -eq 0 ]; then
    echo "Usage: $0 <commande>"
    echo ""
    echo "Commandes disponibles:"
    echo "  verify     - V√©rifier la configuration"
    echo "  redis      - Tester Redis/Celery"
    echo "  celery     - Tester la connexion Celery"
    echo "  direct ID  - Tester la vectorisation directe"
    echo "  task ID    - Tester la t√¢che Celery"
    echo "  all ID     - Tout tester"
    exit 1
fi

COMMAND=$1

case $COMMAND in
    verify)
        echo "üîç V√©rification de la configuration..."
        python scripts/verify_setup.py
        ;;
    redis)
        echo "üî¥ Test Redis/Celery..."
        python scripts/check_redis.py
        ;;
    celery)
        echo "üåø Test connexion Celery..."
        python scripts/test_celery_vectorization.py celery
        ;;
    direct)
        if [ -z "$2" ]; then
            echo "‚ùå ID du document requis!"
            exit 1
        fi
        echo "üîÑ Test vectorisation directe (ID: $2)..."
        python scripts/test_celery_vectorization.py direct "$2"
        ;;
    task)
        if [ -z "$2" ]; then
            echo "‚ùå ID du document requis!"
            exit 1
        fi
        echo "üìã Test t√¢che Celery (ID: $2)..."
        python scripts/test_celery_vectorization.py task "$2"
        ;;
    all)
        if [ -z "$2" ]; then
            echo "‚ùå ID du document requis!"
            exit 1
        fi
        echo "üß™ Tests complets (ID: $2)..."
        python scripts/test_celery_vectorization.py all "$2"
        ;;
    *)
        echo "‚ùå Commande inconnue: $COMMAND"
        exit 1
        ;;
esac